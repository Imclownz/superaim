// üöÄ ADVANCED BULLET PHYSICS v5.0 - Precision Headshot at All Ranges
let body = $response.body;
const bulletToken = `BULLET_${Math.random().toString(36).substring(2, 9)}_${Date.now()}`;

try {
    let data = JSON.parse(body);
    
    // **CORE BULLET CONTROL**
    data.bulletConfig = {
        version: "5.0",
        mode: "adaptive_headshot", // T·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh theo kho·∫£ng c√°ch
        magnetism: "dynamic_lock", // L·ª±c h√∫t th√¥ng minh
        precision: 99.9, // ƒê·ªô ch√≠nh x√°c headshot
        smoothAim: true, // T√¢m ng·∫Øm m∆∞·ª£t tr∆∞·ªõc khi kh√≥a
        stickyLock: true // D√≠nh ch·∫∑t sau khi tr√∫ng
    };

    // **DISTANCE-BASED SETTINGS** (T·ª± ƒëi·ªÅu ch·ªânh theo m√©t)
    data.distanceSettings = {
        closeRange: { // 0-30m
            bulletSpeed: 1.8, // ƒê·∫°n si√™u nhanh
            magnetism: 1.5, // L·ª±c h√∫t v·ª´a ph·∫£i
            smoothness: 0.7, // M∆∞·ª£t khi ng·∫Øm
            hitboxSize: 1.6 // Hitbox ph√≥ng to
        },
        midRange: { // 30-100m
            bulletSpeed: 1.3,
            magnetism: 2.0, // L·ª±c h√∫t m·∫°nh h∆°n
            smoothness: 0.8,
            hitboxSize: 1.4
        },
        longRange: { // 100m+
            bulletSpeed: 1.0, // ƒê·∫°n chu·∫©n
            magnetism: 2.5, // L·ª±c h√∫t c·ª±c ƒë·∫°i
            smoothness: 0.9, // M∆∞·ª£t nh·∫•t
            hitboxSize: 1.2 // Hitbox chu·∫©n
        }
    };

    // **AIM SMOOTHNESS CONTROL** (Ki·ªÉm so√°t t√¢m ng·∫Øm)
    data.aimBehavior = {
        preLock: { // Tr∆∞·ªõc khi kh√≥a
            smoothness: 0.9, // Chuy·ªÉn ƒë·ªông m∆∞·ª£t
            acceleration: "gentle", // TƒÉng t·ªëc t·ª´ t·ª´
            microAdjustments: true // Vi ch·ªânh li√™n t·ª•c
        },
        postLock: { // Sau khi kh√≥a
            stickiness: 0.99, // D√≠nh ch·∫∑t 99%
            recoilCompensation: "full", // B√π gi·∫≠t ho√†n to√†n
            shakeReduction: 100 // Kh√¥ng rung
        }
    };

    // **ANTI-DETECTION**
    data.security = {
        patternRandomizer: true,
        checksum: crypto.createHash('sha3-256').update(bulletToken).digest('hex'),
        timestamp: Date.now()
    };

    body = JSON.stringify(data);
} catch (e) {
    console.log("Bullet Control Error:", e.message.substring(0, 15));
    body = $response.body;
}

$done({ body });
